    <div id="header">
{{ setting('siteName') }}
    </div>

<div style="position:fixed;top:5px;right:5px;background-color:yellow;padding:5px;border:1px black solid;border-radius:5px;z-index:1000;">
    <div class="radio_info">{{ setting('djName') }}</div>
    <audio id="player" src="http://46.105.180.202:8077/stream" autoplay></audio>
	<button onclick="system.player.play()">{{ translate('radio_play','radio') }}</button>
	<button onclick="system.player.pause()">{{ translate('radio_pause','radio') }}</button>
	<button onclick="system.player.down()">{{ translate('radio_minus','radio') }}</button>
	<button onclick="system.player.up()">{{ translate('radio_plus','radio') }}</button>
	<button onclick="system.player.radio()" disabled id="player_radio">{{ translate('radio_radio','radio') }}</button>
    
    <div class="marquee"><span id="radio_rawdata" class="radio_info">{{ translate('radio_loading','radio') }}</span></div>
    <div id="durationTrack"><div id="prevDuration"></div><div id="trackCount">0:00</div></div>
</div> 

<style>
.marquee {
 width: 100%;
 margin: 0 auto;
 white-space: nowrap;
 overflow: hidden;
 position:relative;
 height:1.1em;
}

#durationTrack{
    background-color:white;
    width:95%;
    margin:auto;
    height:1.2em;
    position:relative;
    border:1px solid black;
}

#trackCount{
    width:100%;
    position:absolute;
    left:0;
    top:0;
    text-align:center;
    color:black;
}

#prevDuration{
    background-color:red;
    height:100%;
    width:0;
}

.marquee span {
 display: inline-block;
 position:absolute;
 animation: marquee 15s linear infinite;
}

<!-- .marquee span:hover { -->
 <!-- animation-play-state: paused -->
<!-- } -->

@keyframes marquee {
 0%   {
     left:100%;
 }
 100% {
     left:-150%;
 }
}
</style>

<script>
var system = system || {};
system.player = {
    source: 'http://46.105.180.202:8077/stream',
    start: document.getElementById('player_radio'),
    volume: 0.1,
    phone: document.getElementById('player'),
    radioInterval: 0,
    durationInterval: 0,
    lastSong: '',
    track: document.getElementById('durationTrack'),
    prevTrack: document.getElementById('prevDuration'),
    trackCount: document.getElementById('trackCount'),
    play: function(){
        system.player.phone.volume = system.player.volume;
        system.player.phone.play();
    },
    pause: function(){
        system.player.phone.pause();
    },
    down: function(){
        if(system.player.volume == 0) return;
        system.player.volume -= 0.1;
        system.player.phone.volume = system.player.volume;
    },
    up: function(){
        if(system.player.volume == 1) return;
        system.player.volume += 0.1;
        system.player.phone.volume = system.player.volume;
    },
    radio: function(){
        system.player.set(system.player.source);
    },
    trackUpdate: function(){
        system.player.prevTrack.style.width = (100 * system.player.phone.currentTime / system.player.phone.duration) + '%';
        var date = new Date(0);
        date.setSeconds(system.player.phone.currentTime);
        system.player.trackCount.innerText = date.getMinutes() + ':' + (date.getSeconds()>9 ? date.getSeconds() : '0'+date.getSeconds());
    },
    set: function(source){
        system.player.phone.src = source;
        system.player.phone.play();
        if(source == system.player.source){
            system.player.start.disabled = 1;
            system.player.start_load();
            system.player.track.disabled = 1;
            system.player.track.onclick = null;
            clearInterval(system.player.durationInterval);
            
            system.player.trackCount.innerText = '0:00';
            system.player.prevTrack.style.width = '0%';
        }
        else{
            system.player.start.disabled = 0;
            system.player.stop_load();
            system.player.lastSong = '';
            system.player.track.disabled = 0;
            system.player.track.max = system.player.phone.duration;
            system.player.track.value = system.player.phone.currentTime;
            system.player.track.onclick = function(e){
                system.player.phone.currentTime = system.player.phone.duration / (system.player.track.offsetWidth / e.offsetX);
                system.player.trackUpdate();
            };
            system.player.durationInterval = setInterval(system.player.trackUpdate,1000);
        }
    },
    load_info: function(){
        jQuery.ajax({
          type: 'GET',
          url: 'info_read.php',
          dataType: 'json'
      }).done(function(data){
          if(data['type'] == 'error')
              return;
          data = data['data'][0];
          if(system.player.lastSong == data['song'])
              return;
          
          system.player.lastSong = data['song'];
          document.getElementById('radio_rawdata').innerText = data['rawmeta'];
      });
    },
    start_load: function(){
        system.player.load_info();
        system.player.radioInterval = setInterval(system.player.load_info,60000);
    },
    stop_load: function(){
        clearInterval(system.player.radioInterval);
    }
};
system.player.phone.volume = system.player.volume;
</script>

    <nav>
        
    </nav>